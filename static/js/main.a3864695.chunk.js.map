{"version":3,"sources":["components/buttons.module.css","components/ButtonMain.js","components/Buttons.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ButtonMain","to","className","Buttons","useState","state","setState","s","buttonForm","onClick","App","style","maxWidth","margin","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sGACAA,EAAOC,QAAU,CAAC,WAAa,8B,uHCGpBC,EAAa,WACpB,OACI,cAAC,IAAD,CAAMC,GAAG,KAAKC,UAAU,kBAAxB,gB,iCCFGC,EAAU,WAAO,IAAD,EAEHC,mBAAS,GAFN,mBAEtBC,EAFsB,KAEfC,EAFe,KAGvB,OACI,sBAAKJ,UAAWK,IAAEC,WAAlB,UACI,8BACI,cAAC,IAAD,CAAMP,GAAG,IAAIC,UAAU,kBAAvB,SAA0CG,MAE9C,cAAC,IAAD,CAAMJ,GAAG,IAAIC,UAAU,sBAAvB,eACA,cAAC,IAAD,CAAMD,GAAG,KAAKQ,QAAS,kBAAMH,EAASD,EAAM,IAAIH,UAAU,sBAA1D,eACA,cAAC,IAAD,CAAMD,GAAG,KAAMQ,QAAS,kBAAMH,EAASD,EAAM,IAAIH,UAAU,sBAA3D,mB,OCUGQ,EAjBL,WAEN,OACI,sBAAKC,MAAO,CAACC,SAAU,QAASC,OAAQ,aAAxC,UACI,6CACA,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAE,IAAF,CAAQC,OAAK,EAACC,KAAK,IAAIC,UAAWhB,IAClC,8BACI,cAAE,IAAF,CAAQe,KAAK,KAAKC,UAAWb,eCJtCc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a3864695.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonForm\":\"buttons_buttonForm__1wHsV\"};","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nexport let ButtonMain = () => {\r\n    return (\r\n        <Link to='/1' className='btn btn-warning'>1</Link>\r\n    )\r\n}","import React, {useState} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport s from './buttons.module.css'\r\n\r\nexport let Buttons = () => {\r\n\r\nlet [state, setState] = useState(1)\r\n    return (\r\n        <div className={s.buttonForm}>\r\n            <div>\r\n                <Link to='/' className='btn btn-warning'>{state}</Link>\r\n            </div>\r\n            <Link to='/' className='btn btn-danger mx-2'>1</Link>\r\n            <Link to='/1' onClick={() => setState(state=2)} className='btn btn-danger mx-2'>2</Link>\r\n            <Link to='/1'  onClick={() => setState(state=3)} className='btn btn-danger mx-2'>3</Link>\r\n        </div>\r\n\r\n    )\r\n}","import React from 'react'\nimport {ButtonMain} from \"./components/ButtonMain\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Buttons} from \"./components/Buttons\";\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n\n\nlet App = () => {\n\n    return (\n        <div style={{maxWidth: '10rem', margin: '6rem auto'}}>\n            <h1>Button Task</h1>\n            <Router>\n                <Switch>\n                    < Route exact path='/' component={ButtonMain}/>\n                    <div>\n                        < Route path='/1' component={Buttons}/>\n                    </div>\n                </Switch>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}